* move irecv and process_recv* to omx_recv.c

* check pingpong contents

* send a nack on bad session, except for connect (no session), truc or nack libs

* have a way to make install without the driver or only the driver

* full pull support
  - multiple frames per pull
  - multiple pull per request
  - export rdma_get and rdma window management functions
* send large support
  - rdnv message
  - notify
* rdma_put
* check offset/length vs region and drop if invalid
* user region seqnum
* write parameter in ioctl to register a region, check it when reading/writing from/to the region
* keep a current (segment+offset+remaining) in user_region and recompute only when unordered
* what if too many small segments are in the same pull frame? (skb frags limit) copy in a linear skb or assume 
  the other side knows how to deal with smaller pull frames ?

* support eventq full by queueing things?
  - upto when? reserve before sending? should be guaranteed by the lib (polls before sending) => no need to queue?
  - use it for shared memory ?

* true sleeping in the kernel
  - pass the eventq index in the ioctl to avoid races
  - always wakeup on event?
  - wake up only one and have it wake up the right one ?
* progress thread sleeps on a special queue
  - some event wakeup both queues (force_wakeup)
  - other events wakeup the progress thread only no one on the regular queue

* debug
  - filter various debug message types
  - make driver dprintk runtime configurable

* truc messages
* rendez-vous messages
* notify messages
* connect messages
* retransmission

* omx_endpoint_info

* mapper (open-mxd)
* /dev/open-mxd ?

* optimizations
  - likely/unlikely in the lib; for gcc only
  - single ioctl for multiple medium frags ?
  - use IOAT
  - no need to pad event to 64 ? no need to put the type at the end, but write it after the rest
  - optimize shared comms between boards from within the driver

* use valgrind memory hooks
* add valgrind ioctl hooks

* ntoh[sl] fields

* add a VERSION file and a script to update MODULE_VERSION, COPYING and file headers ?

* non MXoE compatible extensions:
  + rdma in both direction with optional notification containing the target window id ?
  + no notify message, report event on rdma get completion ?
  + multiple segments in large messages
  + extend threshold for small/tiny ?
  + cleanup connect request/reply data
  + no bidirectionnal connect in the background
