* unexpected medium

* mark unexp as done once entirely received, pending before

* factorize mpoe_basic send functions once unexpected medium are ready
* check data instead of displaying

* add a macro to set match_a/b in the driver send functions

* drop tiny/small/... send events since they are synchronous
* add a skb destructor with the event attached for medium
* nice cookies, using the sendq offset?
* improve lib_cookie -> req association

* check length of packets before copying to the recvq

* true pull support
  - events on both sides
  - multiple frames per pull
  - multiple pull per request
  - actual data transfer with user region locking
* support eventq full by queueing things?
  - upto when? reserve before sending? should be guaranteed by the lib (polls before sending) => no need to queue?
  - use it for shared memory ?
* rdma_get
* rdma_put

* true sleeping in the kernel
  - always wakeup on event?
* hide internals from the application
* medium level helpers for tools accessing small part of internals
* matching
* seqnum for in-order matching, associated with lib_cookie

* truc messages
* rendez-vous messages
* notify messages
* connect messages
* retransmission

* no need to pad cmd to 64 ? no need to put the type at the end
* no need to pad event to 64 ? no need to put the type at the end
* ntoh[sl] fields
* use kref to get user region without keeping a spinlock ?
* user region seqnum
* write parameter in ioctl to register a region, check it when reading/writing from/to the region
* keep a current (segment+offset+remaining) in user_region and recompute only when unordered
* use IOAT
* pass the user-address of contig small/tiny buffer instead of copying ?
* optimize shared comms between boards from within the driver

* non MXoE compatible extensions:
  + rdma in both direction with optional notification containing the target window id ?
  + no notify message, report event on rdma get completion ?
  + multiple segments in large messages
  + extend threshold for small/tiny ?
