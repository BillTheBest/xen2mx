bindir = @bindir@
exec_prefix = @exec_prefix@
prefix = @prefix@

include @abs_top_srcdir@/common.mk
REL_DIR	=	tests/

SRCS	=	$(wildcard @srcdir@/*.c)
OBJS	=	$(patsubst @srcdir@/%.c,%.o,$(SRCS))
TESTS	=	$(subst .o,,$(OBJS))

CC	=	@CC@
LD	=	@CC@ #FIXME
MKDIR_P	=	@MKDIR_P@
INSTALL	=	@INSTALL@

CPPFLAGS	+=	-I@top_srcdir@/common
CPPFLAGS	+=	@CPPFLAGS@

CFLAGS	+=	-Wall
CFLAGS	+=	@CFLAGS@
ifeq (@omx_debug_tests@,1)
	CFLAGS	+=	@DBGCFLAGS@
endif

LIB	=	@top_builddir@/@OPEN_MX_LIB_STATIC_PATH@

.PHONY: all installonly install clean distclean

all: $(TESTS)

###############
# dependencies

DEPS	=	$(subst .o,.d,$(OBJS))
DEPSRCDIR	=	@srcdir@/
include @top_srcdir@/depend.mk

########
# build

$(TESTS): %: %.o $(LIB)
	$(CMDECHO) "  LD      $(REL_DIR)$@"
	$(CMDPREFIX) $(LD) $^ -o $@

# build and create dependency file
$(OBJS): %.o: @srcdir@/%.c
	$(CMDECHO) "  CC      $(REL_DIR)$@"
	$(CMDPREFIX) $(CC) -c $(CPPFLAGS) $(CFLAGS) $(BUILDDEPFLAGS) $< -o $@

##########
# install

installonly:
	$(CMDECHO) "  MKDIR   $(DESTDIR)$(bindir)/"
	$(CMDPREFIX) if test ! -d $(DESTDIR)$(bindir); then \
		$(MKDIR_P) $(DESTDIR)$(bindir) ; \
	fi

	$(CMDECHO) "  INSTALL $(patsubst %,$(DESTDIR)$(bindir)/%,$(TESTS))"
	$(CMDPREFIX) $(INSTALL) -m 0755 $(TESTS) $(DESTDIR)$(bindir)/

install: all installonly

########
# clean

clean:
	$(CMDECHO) "  RM      $(patsubst %,$(REL_DIR)%,$(TESTS)) $(patsubst %,$(REL_DIR)%,$(OBJS))"
	$(CMDPREFIX) $(RM) $(TESTS) $(OBJS)

distclean: clean
	$(CMDECHO) "  RM      $(patsubst %,$(REL_DIR)%,$(DEPS))"
	$(CMDPREFIX) $(RM) $(DEPS)
