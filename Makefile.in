exec_prefix	=	@exec_prefix@
prefix	=	@prefix@
bindir	=	@bindir@
includedir	=	@includedir@
srcdir	=	@srcdir@

MKDIR_P	=	@MKDIR_P@
INSTALL	=	@INSTALL@

.PHONY: all install clean distcleqn
.PHONY: driver driver-installonly driver-install driver-clean driver-distclean
.PHONY: lib lib-installonly lib-install lib-clean lib-distclean
.PHONY: tools tools-installonly tools-install tools-clean tools-distclean
.PHONY: tests tests-installonly tests-install tests-clean tests-distclean

all: driver lib tools tests

installonly: other-installonly driver-installonly lib-installonly tools-installonly tests-installonly

install: other-install driver-install lib-install tools-install tests-install

other-installonly:
	@echo "Installing headers to $(DESTDIR)$(includedir)"
	@if test ! -d $(DESTDIR)$(includedir); then \
		echo "$(DESTDIR)$(includedir) didn't exist, creating it" ; \
		$(MKDIR_P) $(DESTDIR)$(includedir) ; \
	fi
	$(INSTALL) -m 0644 $(srcdir)/common/open-mx.h $(DESTDIR)$(includedir)
	@if test @OMX_MX_API_COMPAT@ -eq 1; then \
		echo "Installing MX API compatibility wrappers" ; \
		$(INSTALL) -m 0644 $(srcdir)/common/myriexpress.h $(DESTDIR)$(includedir) ; \
		$(INSTALL) -m 0644 $(srcdir)/common/mx_extensions.h $(DESTDIR)$(includedir) ; \
	fi

other-install: other-installonly

clean: driver-clean lib-clean tools-clean tests-clean

distclean: driver-distclean lib-distclean tools-distclean tests-distclean

driver driver-installonly driver-install driver-clean driver-distclean:
	$(MAKE) -C driver/linux $(shell echo $@ | cut -s -d- -f2)

lib lib-installonly lib-install lib-clean lib-distclean:
	$(MAKE) -C libopen-mx $(shell echo $@ | cut -s -d- -f2)

# the lib is required before linking the tools or tests
tools tests: lib

tools tools-installonly tools-install tools-clean tools-distclean:
	$(MAKE) -C tools $(shell echo $@ | cut -s -d- -f2)

tests tests-installonly tests-install tests-clean tests-distclean:
	$(MAKE) -C tests bindir=$(bindir)/tests $(shell echo $@ | cut -s -d- -f2)

.PHONY: wc
wc:
	wc -cl \
		driver/linux/*.[ch] \
		common/*.h \
		libopen-mx/*.[ch] \
		tools/*.c \
		tests/*.c

.PHONY: svndist curdist

ifeq ($(SUFFIX),date)
TARBALL	=	@PACKAGE_TARNAME@-@PACKAGE_VERSION@+svn.$$(date +%Y%m%d.%H%M%S)
else ifneq ($(SUFFIX),"")
TARBALL	=	@PACKAGE_TARNAME@-@PACKAGE_VERSION@$(SUFFIX)
endif
SVN_URL	=	svn+ssh://scm.gforge.inria.fr/svn/open-mx/
SVN_BRANCH	=	trunk

svndist:
	@newdir=$(TARBALL) \
	 && echo "Exporting current SVN branch $(SVN_BRANCH)..." \
	 && svn export $(SVN_URL)/$(SVN_BRANCH) $$newdir \
	 && echo "Preparing the tree..." \
	 && cd $$newdir && autoreconf -f && rm -rf autom4te.cache/ && cd .. \
	 && echo "Creating the tarball..." \
	 && tar cfz $${newdir}.tar.gz $$newdir && rm -rf $$newdir \
	 && echo "Created $${newdir}.tar.gz" && ls -l $${newdir}.tar.gz

curdist:
	@newdir=$(TARBALL) \
	 && echo "Copying current tree with SVN versioning info..." \
	 && cp -a . ../$$newdir && mv ../$$newdir . && find $$newdir -type d | grep '\.svn$$' | xargs rm -rf \; \
	 && echo "Preparing the tree..." \
	 && cd $$newdir && autoreconf -f && rm -rf autom4te.cache/ && cd .. \
	 && echo "Creating the tarball..." \
	 && tar cfz $${newdir}.tar.gz $$newdir && rm -rf $$newdir \
	 && echo "Created $${newdir}.tar.gz" && ls -l $${newdir}.tar.gz
