exec_prefix	=	@exec_prefix@
prefix	=	@prefix@
bindir	=	@bindir@
includedir	=	@includedir@
srcdir	=	@srcdir@

include @abs_top_srcdir@/common.mk

MKDIR_P	=	@MKDIR_P@
INSTALL	=	@INSTALL@
SED	=	@SED@

COMPONENTS	=	
ifeq (@OMX_BUILD_DRIVER@,1)
	COMPONENTS	+=	driver
endif
ifeq (@OMX_BUILD_LIB@,1)
	COMPONENTS	+=	lib tools tests
	ifeq (@OMX_MX_API_COMPAT@,1)
		COMPONENTS	+=	mxtests
	endif
	COMPONENTS	+=	other
endif

.PHONY: all installonly install clean distcleqn
.PHONY: driver driver-installonly driver-install driver-clean driver-distclean
.PHONY: lib lib-installonly lib-install lib-clean lib-distclean
.PHONY: tools tools-installonly tools-install tools-clean tools-distclean
.PHONY: tests tests-installonly tests-install tests-clean tests-distclean
.PHONY: mxtests mxtests-installonly mxtests-install mxtests-clean mxtests-distclean
.PHONY: other other-installonly other-install other-clean other-distclean

all: $(COMPONENTS)

installonly: $(patsubst %,%-installonly,$(COMPONENTS))

install: $(patsubst %,%-install,$(COMPONENTS))

clean: $(patsubst %,%-clean,$(COMPONENTS))

distclean: $(patsubst %,%-distclean,$(COMPONENTS))

#################
# driver targets

driver driver-installonly driver-install driver-clean driver-distclean:
	$(CMDPREFIX) $(MAKE) -C driver/linux $(shell echo $@ | cut -s -d- -f2)

##############
# lib targets

lib lib-installonly lib-install lib-clean lib-distclean:
	$(CMDPREFIX) $(MAKE) -C libopen-mx $(shell echo $@ | cut -s -d- -f2)

##########################
# tools and tests targets

# the lib is required before linking the tools or tests
tools tests mxtests: lib

tools tools-installonly tools-install tools-clean tools-distclean:
	$(CMDPREFIX) $(MAKE) -C tools $(shell echo $@ | cut -s -d- -f2)

tests tests-installonly tests-install tests-clean tests-distclean:
	$(CMDPREFIX) $(MAKE) -C tests bindir=$(bindir)/tests $(shell echo $@ | cut -s -d- -f2)

mxtests mxtests-installonly mxtests-install mxtests-clean mxtests-distclean:
	$(CMDPREFIX) $(MAKE) -C tests/mx bindir=$(bindir)/tests $(shell echo $@ | cut -s -d- -f2)

################
# other targets

other other-clean other-distclean:

other-installonly:
	$(CMDECHO) "  MKDIR   $(DESTDIR)$(includedir)"
	$(CMDPREFIX) if test ! -d $(DESTDIR)$(includedir); then \
		$(MKDIR_P) $(DESTDIR)$(includedir) ; \
	fi

	$(CMDECHO) "  INSTALL $(DESTDIR)$(includedir)/open-mx.h"
	$(CMDPREFIX) $(INSTALL) -m 0644 $(srcdir)/common/open-mx.h $(DESTDIR)$(includedir)

	$(CMDPREFIX) if test @OMX_MX_API_COMPAT@ -eq 1; then \
		$(CMDECHOAFTERPREFIX) "  INSTALL $(DESTDIR)$(includedir)/myriexpress.h" ; \
		$(INSTALL) -m 0644 $(srcdir)/common/myriexpress.h $(DESTDIR)$(includedir) ; \
		$(CMDECHOAFTERPREFIX) "  INSTALL $(DESTDIR)$(includedir)//mx_extensions.h" ; \
		$(INSTALL) -m 0644 $(srcdir)/common/mx_extensions.h $(DESTDIR)$(includedir) ; \
		if test @OMX_MX_API_UNSUPPORTED_COMPAT@ -ne 1; then \
			$(SED) -e '/#ifdef OMX_MX_API_UNSUPPORTED_COMPAT/,/#endif/d' \
				-i $(DESTDIR)$(includedir)/myriexpress.h $(DESTDIR)$(includedir)/mx_extensions.h ; \
		fi \
	fi

other-install: other-installonly

#######
# misc

.PHONY: svndist curdist

ifeq ($(SUFFIX),date)
TARBALL	=	@PACKAGE_TARNAME@-@PACKAGE_VERSION@+svn.$$(date +%Y%m%d.%H%M%S)
else ifneq ($(SUFFIX),"")
TARBALL	=	@PACKAGE_TARNAME@-@PACKAGE_VERSION@$(SUFFIX)
endif
SVN_URL	=	svn+ssh://scm.gforge.inria.fr/svn/open-mx/
SVN_BRANCH	=	trunk

svndist:
	@newdir=$(TARBALL) \
	 && echo "Exporting current SVN branch $(SVN_BRANCH)..." \
	 && svn export $(SVN_URL)/$(SVN_BRANCH) $$newdir \
	 && echo "Preparing the tree..." \
	 && cd $$newdir && autoreconf -f && rm -rf autom4te.cache/ && cd .. \
	 && echo "Creating the tarball..." \
	 && tar cfz $${newdir}.tar.gz $$newdir && rm -rf $$newdir \
	 && echo "Created $${newdir}.tar.gz" && ls -l $${newdir}.tar.gz

curdist:
	@newdir=$(TARBALL) \
	 && echo "Copying current tree with SVN versioning info..." \
	 && cp -a . ../$$newdir && mv ../$$newdir . && find $$newdir -type d | grep '\.svn$$' | xargs rm -rf \; \
	 && echo "Preparing the tree..." \
	 && cd $$newdir && autoreconf -f && rm -rf autom4te.cache/ && cd .. \
	 && echo "Creating the tarball..." \
	 && tar cfz $${newdir}.tar.gz $$newdir && rm -rf $$newdir \
	 && echo "Created $${newdir}.tar.gz" && ls -l $${newdir}.tar.gz
