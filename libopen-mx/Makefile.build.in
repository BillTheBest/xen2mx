exec_prefix	=	@exec_prefix@
libdir	=	@libdir@
prefix	=	@prefix@

CC	=	@CC@
SHARED_LD	=	@CC@ #FIXME?
AR	=	@AR@
MKDIR_P	=	@MKDIR_P@
INSTALL	=	@INSTALL@
LN_S	=	@LN_S@

CPPFLAGS	+=	-imacros @abs_top_builddir@/common/omx_config.h
CPPFLAGS	+=	-I@abs_top_srcdir@/common
CPPFLAGS	+=	@CPPFLAGS@

CFLAGS	+=	-Wall
CFLAGS	+=	@CFLAGS@
ifeq ($(omx_build_lib_debug),1)
	CPPFLAGS	+=	-DOMX_LIB_DEBUG=1
	CFLAGS	+=	@DBGCFLAGS@
endif

STATIC_CFLAGS	+=	
DYNAMIC_CFLAGS	+=	-fpic

ALL_SRCS	=	$(wildcard @abs_srcdir@/*.c)
ifeq (@OMX_MX_API_COMPAT@,1)
	SRCS	=	$(ALL_SRCS)
else
	SRCS	=	$(filter-out @abs_srcdir@/omx__mx_compat.c,$(ALL_SRCS))
endif

STATIC_OBJS	=	$(patsubst @abs_srcdir@/%.c,%.o,$(SRCS))
ASSERTIONS_STATIC_OBJ	=	omx__assertions.o
STATIC_LIB_OBJS	=	$(filter-out $(ASSERTIONS_STATIC_OBJ),$(STATIC_OBJS))
STATIC_LIB	=	@OPEN_MX_LIB_STATIC@

DYNAMIC_OBJS	=	$(subst .o,.lo,$(STATIC_OBJS))
DYNAMIC_LIB_OBJS	=	$(subst .o,.lo,$(STATIC_LIB_OBJS))
DYNAMIC_LIB	=	@OPEN_MX_LIB_DYNAMIC@

.PHONY: all installonly install assertions depend clean distclean

# build assertions first, then the actual lib
all: assertions $(STATIC_LIB) $(DYNAMIC_LIB)

###############
# dependencies

DEPS	=	$(patsubst @abs_srcdir@/%.c,%.d,$(SRCS))
DEPSRCDIR	=	@abs_srcdir@
# make sure the dependency contains both .lo and .o targets
BUILD_O_AND_LO_OBJECTS	=	1

include @abs_top_srcdir@/depend.mk

########
# build

$(STATIC_LIB): $(STATIC_LIB_OBJS)
	$(AR) cr $@ $^

$(DYNAMIC_LIB): $(DYNAMIC_LIB_OBJS)
	$(SHARED_LD) --shared -o $@ $^

assertions: $(ASSERTIONS_STATIC_OBJ)

# build and create dependency file

$(STATIC_OBJS): %.o: @abs_srcdir@/%.c
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(STATIC_CFLAGS) $(BUILDDEPFLAGS) -MT $(subst .o,.lo,$@) $< -o $@

$(DYNAMIC_OBJS): %.lo: @abs_srcdir@/%.c
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DYNAMIC_CFLAGS) $(BUILDDEPFLAGS) -MT $(subst .lo,.o,$@) $< -o $@

##########
# install

installonly:
	@echo "Installing $(omx_build_lib_name) libs to $(DESTDIR)$(libdir)$(libdirsuffix)/"
	@if test ! -d $(DESTDIR)$(libdir)$(libdirsuffix); then \
		echo "Directory didn't exist, creating it" ; \
		$(MKDIR_P) $(DESTDIR)$(libdir)$(libdirsuffix) ; \
	fi
	$(INSTALL) -m 0644 $(STATIC_LIB) $(DYNAMIC_LIB) $(DESTDIR)$(libdir)$(libdirsuffix)/
	@if test @OMX_MX_API_COMPAT@ -eq 1; then \
		echo "Installing MX compat wrapper lib symlinks in $(DESTDIR)$(libdir)$(libdirsuffix)/" ; \
		$(RM) $(DESTDIR)$(libdir)$(libdirsuffix)/libmyriexpress.a $(DESTDIR)$(libdir)$(libdirsuffix)/libmyriexpress.so ; \
		$(LN_S) $(STATIC_LIB) $(DESTDIR)$(libdir)$(libdirsuffix)/libmyriexpress.a ; \
		$(LN_S) $(DYNAMIC_LIB) $(DESTDIR)$(libdir)$(libdirsuffix)/libmyriexpress.so ; \
	fi

install: all installonly

########
# clean

clean:
	$(RM) $(STATIC_LIB) $(STATIC_LIB_OBJS) $(DYNAMIC_LIB) $(DYNAMIC_LIB_OBJS) $(ASSERTIONS_STATIC_OBJ)

distclean: clean
	$(RM) $(DEPS)
