CC	=	gcc

CFLAGS	=	-Wall
CFLAGS	+=	-g -O2
CFLAGS	+=	-MMD
CFLAGS	+=	-imacros @top_builddir@/common/mpoe_config.h
CFLAGS	+=	-I@top_srcdir@/common

SRCS	=	$(wildcard @srcdir@/*.c)
OBJS	=	$(patsubst @srcdir@/%.c,%.o,$(SRCS))
LIBOBJS	=	$(filter-out mpoe_assertions.o,$(OBJS))
LIB	=	@top_builddir@/@LIBMPOE_A@
DEPS	=	$(patsubst @srcdir@/%.c,%.d,$(SRCS))

.PHONY: all assertions depend clean distclean

# build assertions first, then the actual lib
all: assertions $(LIB)

###############
# dependencies

# create a dependency file when it doesn't exist (called by the include line below)
$(DEPS): %.d:
	$(CC) $(CFLAGS) -MM @srcdir@/`basename $@ .d`.c

# include dependencies, except when cleaning (so that we don't re-create for nothing)
ifeq ($(filter ${MAKECMDGOALS},clean distclean),)
include $(DEPS)
endif

########
# build

$(LIB): $(LIBOBJS)
	ar cr $@ $<

assertions: mpoe_assertions.o

# build and create dependency file
$(OBJS): %.o: @srcdir@/%.c
	$(CC) -c $(CFLAGS) $< -o $@

########
# clean

clean:
	$(RM) $(LIB) $(OBJS)

distclean: clean
	$(RM) $(DEPS)
