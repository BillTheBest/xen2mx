CC	=	gcc

CPPFLAGS	+=	-imacros @top_builddir@/common/mpoe_config.h
CPPFLAGS	+=	-I@top_srcdir@/common
CFLAGS	+=	-Wall
CFLAGS	+=	-g -O2

SRCS	=	$(wildcard @srcdir@/*.c)
OBJS	=	$(patsubst @srcdir@/%.c,%.o,$(SRCS))
LIBOBJS	=	$(filter-out mpoe_assertions.o,$(OBJS))
LIB	=	@top_builddir@/@LIBMPOE_A@
DEPS	=	$(subst .o,.d,$(OBJS))

.PHONY: all assertions depend clean distclean

# build assertions first, then the actual lib
all: assertions $(LIB)

###############
# dependencies

# output dependency file in .d while building .c -o .o
BUILDDEPFLAGS	=	-MMD
# output dependency file in .d for .c
ONLYDEPFLAGS	=	-MMD -MM

# create a dependency file when it doesn't exist (called by the include line below)
$(DEPS): %.d:
	$(CC) $(CPPFLAGS) $(ONLYDEPFLAGS) @srcdir@/$(shell basename $@ .d).c

# include dependencies, except when cleaning (so that we don't re-create for nothing)
ifeq ($(filter ${MAKECMDGOALS},clean distclean),)
include $(DEPS)
endif

########
# build

$(LIB): $(LIBOBJS)
	ar cr $@ $<

assertions: mpoe_assertions.o

# build and create dependency file
$(OBJS): %.o: @srcdir@/%.c
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(BUILDDEPFLAGS) $< -o $@

########
# clean

clean:
	$(RM) $(LIB) $(OBJS)

distclean: clean
	$(RM) $(DEPS)
