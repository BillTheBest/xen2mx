#!/bin/sh

# chkconfig: 2345 30 70
# description: starts Open-MX driver

### BEGIN INIT INFO
# Provides:          mx
# Required-Start:    $network $syslog $remote_fs
# Required-Stop:     $network $syslog $remote_fs
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Description:       Starts the Open-MX driver
### END INIT INFO

# Note that this is replaced by make install, not configure!
OMX_PREFIX=@omx_install_prefix@
DEVICE=@omx_device_name@
GROUP=@omx_device_group@
MODE=@omx_device_mode@
PEERS_FILE=@omx_peers_file@

OMX_CONFIG=/etc/open-mx/open-mx.conf
LINUX_RELEASE=$(uname -r)

set -e

if test ! -d ${OMX_PREFIX}; then
    echo "Something bad happened with the install script"
    echo "OMX_PREFIX isn't pointing to a valid directory"
    exit 1
fi

test -f ${OMX_CONFIG} && source ${OMX_CONFIG}
OMX_MODULE_PARAMS="${OMX_MODULE_PARAMS} ifnames=${IFACES}"

# Remove the Open-MX module if loaded
unload_omx() {
    if grep open[-_]mx /proc/modules > /dev/null; then
        echo "Removing Open-MX driver"
        /sbin/rmmod open-mx
    fi
    rm -f "$DEVICE"
}

# Load the Open-MX module
load_omx() {
    echo "Loading Open-MX driver"
    params=" $OMX_MODULE_PARAMS $*"
    module="${OMX_PREFIX}/lib/modules/${LINUX_RELEASE}/open-mx.ko"

    # modprobe the dependencies
    depends=$(modinfo $module | grep ^depends | awk '{print $2}' | sed 's/,/ /')
    for depend in $depends ; do
	echo "Loading dependency module: $depend"
	modprobe $depend
    done

    # load the driver
    /sbin/insmod $module $params

    # sleep a bit so that udev is done
    sleep 1

    # create the device node if necessary
    if ! test -e $DEVICE; then
	echo "Creating '$DEVICE'"
	major=$(sed -nr -e '/^Character devices:/,/^Block devices:/s/ *([0-9]+) *misc/\1/p' /proc/devices)
	minor=$(sed -nr -e 's/ *([0-9]+) *open-mx/\1/p' /proc/misc)
	if test -z "$major" -o -z "$minor"; then
	    echo "[ERROR] Failed to retrieve device major/minor numbers"
	else
	    mknod "$DEVICE" c "$major" "$minor" \
		|| echo "[ERROR] Failed to create device node"
	fi
    fi

    # set device node mode and group
    echo "Setting group '$GROUP' and mode '$MODE' on device '$DEVICE'"
    chgrp "$GROUP" "$DEVICE" \
	|| echo "[ERROR] Failed to set mode"
    chmod "$MODE" "$DEVICE" \
	|| echo "[ERROR] Failed to set group"

    # initialize peers
    if test -f ${PEERS_FILE}; then
	echo "Initializing peers using file '${PEERS_FILE}'"
	${OMX_PREFIX}/bin/omx_init_peers -c "${PEERS_FILE}"
    else
	echo "Peers file ${PEERS_FILE} does not exist, remember to run omx_peers_init with the correct file"
    fi
}

usage () {
	echo $"Usage: $0 {start|stop|status|restart} [module load params]"
	exit 1
}

[ $# -eq 0 ] && usage

cmd="$1"
shift

case "$cmd" in
    start)
	load_omx "$@"
	;;
    stop)
	unload_omx
	;;
    status)
	if grep open[-_]mx /proc/modules > /dev/null; then
	    echo "Open-MX driver is loaded"
	else
	    echo "Open-MX driver is not loaded"
	fi
	;;
    restart)
	unload_omx
	load_omx "$@"
        ;;
    *)
	usage
esac

exit 0
